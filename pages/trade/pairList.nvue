<template>
  <view class="pair-list-box" @click="close">
    <my-status-bar></my-status-bar>
    <view class="pair-list-body" @click.stop="bodyClick($event)">
      <view class="pair-list-head">
        <text class="pair-list-head-title">{{headTitle}}</text>
        <my-input class="pair-list-head-input" size="mini" :placeholder="searchPlaceholder" v-model="search">
          <template slot="prefix">
            <uni-icons class="pair-list-head-search" type="search" size="20" color="#E1E8F5" />
          </template>
        </my-input>
      </view>
      <view class="swiper-list-tabs">
        <scroll-view ref="tabbar1" id="swiper-list-tab-bar" class="swiper-list-tab-bar" :scroll="false" :scroll-x="true" :show-scrollbar="false"
                     :scroll-into-view="scrollInto">
          <view style="flex-direction: column;">
            <view style="flex-direction: row;">
              <view class="swiper-list-uni-tab-item" v-for="(tab,index) in tabList" :key="tab.id" :id="tab.id" :ref="'tabitem'+index"
                    :data-id="index" :data-current="index" @click="ontabtap">
                <text class="swiper-list-uni-tab-item-title"
                      :class="tabIndex===index ? 'swiper-list-uni-tab-item-title-active' : ''">{{tab.name}}</text>
              </view>
            </view>
            <view class="swiper-list-scroll-view-indicator">
              <view ref="underline" class="swiper-list-scroll-view-underline" :class="isTap ? 'swiper-list-scroll-view-animation':''"
                    :style="{left: indicatorLineLeft + 'px', width: indicatorLineWidth + 'px'}">
                <view class="swiper-list-scroll-view-underline-bg"></view>
              </view>
            </view>
          </view>
        </scroll-view>
        <view class="swiper-list-tab-bar-line"></view>

        <swiper class="swiper-list-tab-box" ref="swiper1" :current="tabIndex" :duration="300" @change="onswiperchange"
                @transition="onswiperscroll" @animationfinish="animationfinish" @onAnimationEnd="animationfinish">
          <swiper-item class="swiper-list-swiper-item" v-for="(page, index) in tabList" :key="index">
            <!--#ifdef APP-PLUS-->
            <swiper-list-page class="swiper-list-page-item" :loading-more-text="loadingMoreText" :refresh-status-text="refreshStatusText" :nid="page.nid" :ref="'page' + index" width="600rpx"></swiper-list-page>
            <!--#endif-->
            <!--#ifndef APP-PLUS-->
            <swiper-list-page class="swiper-list-page-item" :loading-more-text="loadingMoreText" :refresh-status-text="refreshStatusText" :nid="page.nid" :ref="'page' + index" width="750rpx"></swiper-list-page>
            <!--#endif-->
          </swiper-item>
        </swiper>


        <cover-view class="pair-list-head-list" v-if="search.length > 0"></cover-view>

        <cover-view class="swiper-list-tabs-loading" v-if="pageLoading">
          <uni-load-more color="#2DBD96" iconType="circle" status="loading" :contentText="{}"></uni-load-more>
        </cover-view>

      </view>
    </view>
  </view>
</template>

<script>
import {navigateBack} from "../../utils/common"
import swiperListPage from '../../components/trade/pair-swiper-list-page.nvue';
import MyStatusBar from "../../components/my-status-bar";
import MyInput from "../../components/my-input/input";
// #ifdef APP-PLUS
const dom = weex.requireModule('dom');
// #endif
import {
  initVueI18n
} from '@dcloudio/uni-i18n'
import messages from '../../locale/index';
const { t } = initVueI18n(messages)

// 缓存每页最多
const MAX_CACHE_DATA = 100;
// 缓存页签数量
const MAX_CACHE_PAGE = 3;
const TAB_PRELOAD_OFFSET = 1;

export default {
  name: "pairList",
  components: {
    MyStatusBar,
    MyInput,
    swiperListPage
  },
  computed: {
    headTitle() {
      return t('trade.coin2coin')
    },
    searchPlaceholder() {
      return t('common.search.placeholder')
    }
  },
  data() {
    return {
      tabList: [
        {
          id: "tab00",
          name: t('market.collect'),
          nid: 0
        },
        {
          id: "tab01",
          name: 'USDT',
          nid: 1
        },
        {
          id: "tab02",
          name: 'BTC',
          nid: 2
        },
        {
          id: "tab03",
          name: 'ETH',
          nid: 3
        },
        {
          id: "tab04",
          name: '消费',
          nid: 225
        },
        {
          id: "tab05",
          name: '娱乐',
          nid: 208
        },
      ],
      tabIndex: 0,
      cacheTab: [],
      scrollInto: "",
      navigateFlag: false,
      indicatorLineLeft: 0,
      indicatorLineWidth: 0,
      isTap: false,
      refreshStatusText: {
        initial: t('common.refresh.initial'),
        complete: t('common.refresh.complete'),
        pull: t('common.refresh.pull'),
        freed: t('common.refresh.freed'),
      },
      loadingMoreText: {
        contentdown: t('common.more.down'),
        contentrefresh: t('common.more.refresh'),
        contentnomore: t('common.more.nomore')
      },
      search: "",
      pageLoading: true,
    }
  },
  onReady() {
    this._lastTabIndex = 0;
    this.swiperWidth = 0;
    this.tabbarWidth = 0;
    this.tabListSize = {};
    this._touchTabIndex = 0;

    this.pageList = [];
    let len = this.tabList.length
    for (var i = 0; i < len; i++) {
      let item = this.$refs['page' + i]
      if (Array.isArray(item)) {
        this.pageList.push(item[0])
      } else {
        this.pageList.push(item)
      }
    }
    this.switchTab(this.tabIndex);
    this.selectorQuery();

    setTimeout(() => {
      this.pageLoading = false
    }, 500)

  },
  onPullDownRefresh() {
    this.refreshData(this.tabIndex)
  },
  methods: {
    close() {
      navigateBack()
    },
    bodyClick(e) {
      e.stopPropagation();
    },
    ontabtap(e) {
      let index = e.target.dataset.current || e.currentTarget.dataset.current;
      //let offsetIndex = this._touchTabIndex = Math.abs(index - this._lastTabIndex) > 1;

      // #ifdef APP-PLUS || H5 || MP-WEIXIN || MP-QQ
      this.isTap = true;
      var currentSize = this.tabListSize[index];
      this.updateIndicator(currentSize.left, currentSize.width);
      this._touchTabIndex = index;
      // #endif

      this.switchTab(index);
    },
    onswiperchange(e) {
      // 注意：百度小程序会触发2次

      // #ifndef APP-PLUS || H5 || MP-WEIXIN || MP-QQ
      let index = e.target.current || e.detail.current;
      this.switchTab(index);
      // #endif
    },
    onswiperscroll(e) {
      if (this.isTap) {
        return;
      }

      var offsetX = e.detail.dx;
      var preloadIndex = this._lastTabIndex;
      if (offsetX > TAB_PRELOAD_OFFSET) {
        preloadIndex++;
      } else if (offsetX < -TAB_PRELOAD_OFFSET) {
        preloadIndex--;
      }
      if (preloadIndex === this._lastTabIndex || preloadIndex < 0 || preloadIndex > this.pageList.length - 1) {
        return;
      }
      if (this.pageList[preloadIndex].dataList.length === 0) {
        this.loadTabData(preloadIndex);
      }

      // #ifdef APP-PLUS || H5 || MP-WEIXIN || MP-QQ
      var percentage = Math.abs(this.swiperWidth / offsetX);
      var currentSize = this.tabListSize[this._lastTabIndex];
      var preloadSize = this.tabListSize[preloadIndex];
      var lineL = currentSize.left + (preloadSize.left - currentSize.left) / percentage;
      var lineW = currentSize.width + (preloadSize.width - currentSize.width) / percentage;
      this.updateIndicator(lineL, lineW);
      // #endif
    },
    animationfinish(e) {
      // #ifdef APP-PLUS || H5 || MP-WEIXIN || MP-QQ
      let index = e.detail.current;
      if (this._touchTabIndex === index) {
        this.isTap = false;
      }
      this._lastTabIndex = index;
      this.switchTab(index);
      this.updateIndicator(this.tabListSize[index].left, this.tabListSize[index].width);
      // #endif
    },
    selectorQuery() {
      // #ifdef APP-NVUE
      dom.getComponentRect(this.$refs.tabbar1, res => {
        this.tabbarWidth = res.size.width;
      });
      dom.getComponentRect(this.$refs['swiper1'], res => {
        this.swiperWidth = res.size.width;
      });
      // for (var i = 0; i < this.tabList.length; i++) {
      // 	this.getElementSize(dom, this.$refs['tabitem' + i][0], i);
      // }
      // 因 nvue 暂不支持 class 查询
      var queryTabSize = uni.createSelectorQuery().in(this);
      for (var i = 0; i < this.tabList.length; i++) {
        queryTabSize.select('#' + this.tabList[i].id).boundingClientRect();
      }
      queryTabSize.exec(rects => {
        rects.forEach((rect) => {
          this.tabListSize[rect.dataset.id] = rect;
        })
        this.updateIndicator(this.tabListSize[this.tabIndex].left, this.tabListSize[this.tabIndex].width);
        this.switchTab(this.tabIndex);
      });
      // #endif

      // #ifdef MP-WEIXIN || H5 || MP-QQ
      uni.createSelectorQuery().in(this).select('.swiper-list-tab-box').fields({
        dataset: true,
        size: true,
      }, (res) => {
        this.swiperWidth = res.width;
      }).exec();
      uni.createSelectorQuery().in(this).selectAll('.swiper-list-uni-tab-item').boundingClientRect((rects) => {
        rects.forEach((rect) => {
          this.tabListSize[rect.dataset.id] = rect;
        })
        this.updateIndicator(this.tabListSize[this.tabIndex].left, this.tabListSize[this.tabIndex].width);
      }).exec();
      // #endif
    },
    getElementSize(dom, ref, id) {
      dom.getComponentRect(ref, res => {
        this.tabListSize[id] = res.size;
      });
    },
    updateIndicator(left, width) {
      this.indicatorLineLeft = left;
      this.indicatorLineWidth = width;
    },
    switchTab(index) {
      if (this.pageList[index].dataList.length === 0) {
        this.loadTabData(index);
      }

      if (this.tabIndex === index) {
        return;
      }

      // 缓存 tabId
      if (this.pageList[this.tabIndex].dataList.length > MAX_CACHE_DATA) {
        let isExist = this.cacheTab.indexOf(this.tabIndex);
        if (isExist < 0) {
          this.cacheTab.push(this.tabIndex);
        }
      }

      this.tabIndex = index;

      // #ifdef APP-NVUE
      this.scrollTabTo(index);
      // #endif
      // #ifndef APP-NVUE
      this.scrollInto = this.tabList[index].id;
      // #endif

      // 释放 tabId
      if (this.cacheTab.length > MAX_CACHE_PAGE) {
        let cacheIndex = this.cacheTab[0];
        this.clearTabData(cacheIndex);
        this.cacheTab.splice(0, 1);
      }
    },
    scrollTabTo(index) {
      const el = this.$refs['tabitem' + index][0];
      let offset = 0;
      // TODO fix ios offset
      if (index > 0) {
        offset = this.tabbarWidth / 2 - this.tabListSize[index].width / 2;
        if (this.tabListSize[index].right < this.tabbarWidth / 2) {
          offset = this.tabListSize[0].width;
        }
      }
      dom.scrollToElement(el, {
        offset: -offset
      });
    },
    loadTabData(index) {
      setTimeout(() => {
        this.pageList[index].loadData();
      }, 500)
    },
    refreshData(index) {
      setTimeout(() => {
        this.pageList[index].refreshData();
      }, 500)
    },
    setTabItem(index, obj) {
      this.pageList[index].setItem(obj);
    },
    clearTabData(index) {
      this.pageList[index].clear();
    }
  }
}
</script>

<style lang="scss">

/* #ifndef APP-NVUE */
page {
  background: transparent;
  display: flex;
}
/* #endif */

.pair-list-box {
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  /* #ifndef APP-NVUE */
  display: flex;
  /* #endif */
  background-color: rgba(0, 0, 0, 0.4);
}

.pair-list-body {
  flex: 1;
  /* #ifdef APP-PLUS */
  width: 600rpx;
  /* #endif */
  /* #ifndef APP-PLUS */
  width: 750rpx;
  /* #endif */
  background-color: #1C222B;
}

.pair-list-head {
  padding: 35px 15px 15px;
}

.pair-list-head-title {
  font-size: 20px;
  color: #E1E8F5;
}

.pair-list-head-input {
  margin-top: 15px;
  background-color: #212631;
  border-radius: 4px;
}

.pair-list-head-search {
  margin-left: 5px;
}

.pair-list-head-list {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #1C222B;
  z-index: 10000;
}

.swiper-list-tabs-loading {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  flex: 1;
  display: flex;
  flex-direction: row;
  justify-content: center;
  background-color: #1C222B;
  z-index: 20001;
}

.swiper-list-tabs {
  flex: 1;
  flex-direction: column;
  overflow: hidden;
  /* #ifdef MP-ALIPAY || MP-BAIDU */
  height: 100vh;
  /* #endif */
  position: relative;
}

.swiper-list-tab-bar {
  /* #ifdef APP-PLUS */
  width: 750rpx;
  /* #endif */
  height: 42px;
  flex-direction: row;
  /* #ifndef APP-PLUS */
  white-space: nowrap;
  /* #endif */
  z-index: 1000;
}

/* #ifndef APP-NVUE */
.swiper-list-tab-bar ::-webkit-scrollbar {
  display: none;
  width: 0 !important;
  height: 0 !important;
  -webkit-appearance: none;
  background: transparent;
}
/* #endif */

.swiper-list-scroll-view-indicator {
  position: relative;
  height: 4px;
  background-color: transparent;
}

.swiper-list-scroll-view-underline {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 0;
  padding-left: 20px;
  padding-right: 20px;
  display: flex;
  flex-direction: row;
}

.swiper-list-scroll-view-underline-bg {
  flex: 1;
  background-color: #2DBD96;
}

.swiper-list-scroll-view-animation {
  transition-duration: 0.2s;
  transition-property: left;
}

.swiper-list-tab-bar-line {
  height: 1px;
  background-color: #292E39;
}

.swiper-list-tab-box {
  flex: 1;
}

.swiper-list-uni-tab-item {
  /* #ifndef APP-PLUS */
  display: inline-block;
  /* #endif */
  flex-wrap: nowrap;
  padding-left: 20px;
  padding-right: 20px;
}

.swiper-list-uni-tab-item-title {
  color: #9197A3;
  font-size: 15px;
  height: 35px;
  line-height: 35px;
  flex-wrap: nowrap;
  /* #ifndef APP-PLUS */
  white-space: nowrap;
  /* #endif */
}

.swiper-list-uni-tab-item-title-active {
  color: #E1E8F5;
}

.swiper-list-swiper-item {
  flex: 1;
  flex-direction: column;
}

.swiper-list-page-item {
  flex: 1;
  flex-direction: row;
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

</style>