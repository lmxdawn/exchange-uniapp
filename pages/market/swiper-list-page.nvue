<template>
  <view class="page-news">
    <!-- #ifdef APP-NVUE -->
    <list ref="list" class="listview" @loadmore="loadMore">
      <refresh class="refresh" :display="refreshing ? 'show' : 'hide'" @refresh="onrefresh" @pullingdown="onpullingdown">
        <div class="refresh-view">
          <loading-indicator class="loading-icon" animating="true"></loading-indicator>
        </div>
      </refresh>
      <cell class="cell" v-for="(item, index) in dataList" :key="item.id">
        <swiper-list-item :listItem="item"></swiper-list-item>
      </cell>
      <cell>
        <uni-load-more :status="loadingStatus" :contentText="loadingMoreText"></uni-load-more>
      </cell>
    </list>
    <!-- #endif -->
    <!-- #ifndef APP-NVUE -->
    <scroll-view class="listview" style="flex: 1;" enableBackToTop="true" scroll-y @scrolltolower="loadMore()">
      <view v-for="(item, index) in dataList" :key="item.id">
        <swiper-list-item :listItem="item"></swiper-list-item>
      </view>
      <view class="loading-more">
        <uni-load-more :status="loadingStatus" :contentText="loadingMoreText"></uni-load-more>
      </view>
    </scroll-view>
    <!-- #endif -->
  </view>
</template>

<script>

import swiperListItem from './swiper-list-item.nvue';

export default {
  components: {
    swiperListItem
  },
  props: {
    nid: {
      type: [Number, String],
      default: ''
    }
  },
  data() {
    return {
      dataList: [],
      navigateFlag: false,
      refreshing: false,
      refreshFlag: false,
      refreshText: "",
      loadingStatus: "more",
      isNoData: false,
      pulling: false,
      angle: 0,
      loadingMoreText: {
        contentdown: ' ',
        contentrefresh: ' ',
        contentnomore: ' '
      },
    }
  },
  created() {
    this.pullTimer = null;
    this.requestParams = {
      columnId: this.nid,
      minId: 0,
      pageSize: 10,
      column: 'id,post_id,title,author_name,cover,published_at,comments_count'
    };

    setTimeout(() => {
      let item = this.dataList[2]
      item.rate = -69.63
      this.dataList[2] = item
    }, 3000)

  },
  methods: {
    loadData(refresh) {
      if (this.loadingStatus !== "more") {
        return;
      }

      this.loadingStatus = "loading";
      this.isNoData = false;
      this.requestParams.time = new Date().getTime() + '';

      uni.request({
        // url: this.$host + 'api/news',
        url: 'https://unidemo.dcloud.net.cn/api/news',
        data: this.requestParams,
        success: (result) => {
          const data = result.data;
          this.isNoData = (data.length <= 0);

          const data_list = data.map((news) => {
            return {
              id: this.newGuid() + news.id,
              newsid: news.id,
              article_type: 1,
              datetime: "",
              title: news.title,
              image_url: news.cover,
              source: news.author_name,
              comment_count: news.comments_count,
              post_id: news.post_id,
              rate: 12.50,
            };
          });

          if (refresh) {
            this.dataList = data_list;
            this.requestParams.minId = 0;
          } else {
            this.dataList = this.dataList.concat(data_list);
            this.requestParams.minId = data[data.length - 1].id;
          }

        },
        fail: (err) => {
          if (this.dataList.length == 0) {
            this.isNoData = true;
          }
        },
        complete: (e) => {
          this.loadingStatus = "more";
          if (refresh) {
            this.pulling = true;
            this.refreshing = false;
            this.refreshFlag = false;
            this.refreshText = "已刷新";
            if (this.pullTimer) {
              clearTimeout(this.pullTimer);
            }
            // TODO fix ios和Android 动画时间相反问题
            this.pullTimer = setTimeout(() => {
              this.pulling = false;
            }, 500);
          }
        }
      });
    },
    loadMore(e) {
      this.loadData();
    },
    clear() {
      this.dataList.length = 0;
      this.requestParams.minId = 0;
    },
    refreshData() {
      this.pulling = true;
      this.refreshing = true;
      this.refreshText = "正在刷新...";
      this.loadData(true);
    },
    onrefresh(e) {
      if (!this.refreshFlag) {
        return;
      }
      this.refreshData();
      // #ifdef APP-NVUE
      this.$refs.list.resetLoadmore();
      // #endif

    },
    onpullingdown(e) {
      if (this.refreshing || this.pulling) {
        return;
      }

      if (Math.abs(e.pullingDistance) > Math.abs(e.viewHeight)) {
        this.refreshFlag = true;
        this.refreshText = "释放立即刷新";
      } else {
        this.refreshFlag = false;
        this.refreshText = "下拉可以刷新";
      }
    },
    newGuid() {
      let s4 = function() {
        return (65536 * (1 + Math.random()) | 0).toString(16).substring(1);
      }
      return (s4() + s4() + "-" + s4() + "-4" + s4().substr(0, 3) + "-" + s4() + "-" + s4() + s4() + s4()).toUpperCase();
    }
  }
}
</script>

<style lang="scss" scoped>

.page-news {
  flex: 1;
  flex-direction: column;
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

.listview {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  /* #ifndef APP-NVUE */
  display: flex;
  flex-direction: column;
  /* #endif */
  /* #ifndef MP-ALIPAY */
  flex-direction: column;
  /* #endif */
}

.refresh {
  justify-content: center;
}

.refresh-view {
  /* #ifndef APP-NVUE */
  display: flex;
  /* #endif */
  /*width: 750rpx;*/
  height: 64px;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: center;
}

.refresh-icon {
  width: 32px;
  height: 32px;
  transition-duration: .5s;
  transition-property: transform;
  transform: rotate(0deg);
  transform-origin: 15px 15px;
}

.refresh-icon-active {
  transform: rotate(180deg);
}

.loading-icon {
  width: 20px;
  height: 20px;
  margin-right: 5px;
  color: #23AD8F;
}
</style>
