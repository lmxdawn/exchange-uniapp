<template>
	<view class="swiper-item-cell" @click="click" :class="[background]">
    <view class="swiper-item-cell-left">
      <view class="swiper-item-cell-left1">
        <view class="swiper-item-cell-text-box">
          <text class="swiper-item-cell-text swiper-item-cell-text-big-b">{{listItem.tradeCoin.name}}/{{listItem.coin.name}}</text>
          <text class="swiper-item-cell-text swiper-item-cell-text-small">{{listItem.tradeTotal24}}</text>
        </view>
      </view>
      <view class="swiper-item-cell-left2">
        <view class="swiper-item-cell-text-box">
          <text class="swiper-item-cell-text swiper-item-cell-text-big">{{listItem.price}}</text>
          <text class="swiper-item-cell-text swiper-item-cell-text-small">â‰ˆ {{priceRate}} {{usdtRate.symbol}}</text>
        </view>
      </view>
    </view>
    <view class="swiper-item-cell-right">
      <view class="swiper-item-cell-text-box">
        <view class="swiper-item-cell-up-button" :class="[rate >= 0 ? 'upRate' : 'downRate']">
          <text class="swiper-item-cell-text">{{rate >= 0 ? '+' : ''}}{{ rate }}%</text>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
  import {mapGetters} from "vuex";
  import {accMul} from "../../utils/decimal"
  import {navigateTo} from "../../utils/common";
	export default {
		props: {
			listItem: {
				type: Object,
				default: function(e) {
					return {}
				}
			}
		},
    computed: {
      ...mapGetters({
        usdtRate: "usdtRate",
      }),
      priceRate() {
        let usdtPrice = this.listItem.coin.usdtPrice
        usdtPrice = usdtPrice === 1 ? this.listItem.price : usdtPrice
        return Number(accMul(this.usdtRate.price, usdtPrice)).toFixed(this.usdtRate.precision)
      },
      rate() {
        return Number(this.listItem.rate24).toFixed(2)
      }
    },
    data() {
      return {
        background: ''
      }
    },
    watch: {
      listItem: {
        handler(item,index) {
          if (item.rate24 > 0) {
            this.background = 'transparent-up'
          } else {
            this.background = 'transparent-down'
          }
          setTimeout(() =>{
            this.background = ''
          }, 500)
        },
        deep: true
      }
    },
		methods: {
			click() {
        const kLineUrl = `trade/kLine?coinId=${this.listItem.coin.id}&tradeCoinId=${this.listItem.tradeCoin.id}`
        navigateTo(kLineUrl, "slide-in-right")
			},
		}
	}
</script>

<style lang="scss" scoped>
	.swiper-item-cell {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: row;
    width: 750rpx;
    padding: 5px 10px;
    background-color: transparent;
    transition-property: background-color;
    transition-duration: .5s
	}
  .swiper-item-cell-left {
    flex: 1;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    //background-color: red;
  }
  .swiper-item-cell-right {
    width: 230rpx;
    //background-color: green;
  }
  .swiper-item-cell-left1 {
    .swiper-item-cell-text-box {
      align-items: flex-start;
    }
  }
  .swiper-item-cell-left2 {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }
  .swiper-item-cell-up-button {
    padding: 9px 15px;
    .swiper-item-cell-text {
      font-size: 13px;
    }
    &.upRate {
      background-color: rgba(26,187,151,.08);
      .swiper-item-cell-text {
        color: #2DBD96;
      }
    }
    &.downRate {
      background-color: rgba(237,102,102,.08);
      .swiper-item-cell-text {
        color: #ED6666;
      }
    }
  }
  .swiper-item-cell-text-big {
    font-size: 16px;
    color: #b8c6d8!important;
  }
  .swiper-item-cell-text-big-b {
    font-size: 18px;
    color: #b8c6d8!important;
  }
  .swiper-item-cell-text-small {
    font-size: 12px;
    color: rgba(184,198,216,.38)!important;
    margin-top: 5px;
  }
  .swiper-item-cell-text-box {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-end;
  }
  .swiper-item-cell-text {
    color: #FFFFFF;
  }

  .transparent-up {
    background-color: #1A272F;
  }
  .transparent-down {
    background-color: #24222C;
  }

</style>
